api:
  openrouter:
    key: "${OPENROUTER_API_KEY}"  # 从环境变量读取
    base_url: "https://openrouter.ai/api/v1"

  # HuggingFace API配置 (用于Speaker Diarization)
  huggingface:
    token: "${HUGGINGFACE_TOKEN}"  # 从环境变量读取

    models:
      summary: "google/gemma-3n-e2b-it:free"  # Google免费快速模型
      mindmap: "google/gemma-3n-e2b-it:free"  # Google免费快速模型
      # 备选免费快速模型：
      # "opengvlab/internvl3-2b:free"      # 最快 (379.88 t/s)
      # "google/gemini-2.5-flash-preview"  # 快速 (140.85 t/s)
      # "qwen/qwen3-30b-a3b:free"          # 中等 (83.19 t/s)
    rate_limits:
      free_tier:
        requests_per_10s: 10      # 每10秒最多10个请求
        requests_per_minute: 60   # 每分钟最多60个请求
        daily_credit_limit: 5     # 免费层每日5个credits
      paid_tier:
        requests_per_10s: 10      # 付费账户10秒限制相同
        requests_per_minute: 60   # 每分钟限制相同
        credit_to_requests_ratio: 100  # 每个credit允许100个请求/天

paths:
  data_folder: "./data"  # 数据存储目录 (转录文本、日志等)
  watch_folder: "./data/uploads"  # 音频文件监控目录 - 直接监控上传目录
  output_folder: "./data/output"  # 处理结果输出目录

spacy:
  model: "zh_core_web_sm"

# Phase 10: MLX Whisper配置 (替代WhisperKit)
mlx_whisper:
  # 默认模型配置 - 使用标准MLX命名
  default_model: "whisper-tiny-mlx"  # 默认使用的模型

  # 可用模型列表（统一使用标准MLX命名）
  available_models:
    - "mlx-community/whisper-tiny-mlx"
    - "mlx-community/whisper-base-mlx"
    - "mlx-community/whisper-small-mlx"
    - "mlx-community/whisper-medium-mlx"
    - "mlx-community/whisper-large-v3-mlx"
    - "mlx-community/whisper-large-v3-turbo"

  # 统一使用HuggingFace缓存，不支持本地下载（更好的跨项目共享）

  # 转录参数配置
  transcription:
    word_timestamps: true                         # 词级时间戳(原生支持)
    language_detection: "auto"                    # 自动语言检测
    supported_languages: ["en", "zh", "ja", "ko", "de", "fr", "es", "it", "pt", "ru"]

# Speaker Diarization配置
diarization:
  provider: "pyannote"   # 使用pyannote-audio
  max_speakers: 6
  min_segment_duration: 1.0
  model_path: "./models/diarization"            # 说话人分离模型目录

  # 基于content type和subcategory的diarization配置
  content_type_defaults:
    # 主分类默认设置
    lecture: false       # 讲座通常单人，默认不启用
    meeting: true        # 会议多人对话，默认启用

    # Lecture子分类配置 - 用户可自定义
    lecture_subcategories:
      CS101: false          # CS课程，单人讲授
      seminar: true      # 研讨会，可能有讨论环节
      workshop: true     # 工作坊，可能有互动

  # 输出格式配置
  output_format:
    group_by_speaker: true          # 默认按说话人分组，便于阅读
    timestamp_precision: 1          # 时间戳精度(小数位数)
    include_confidence: false       # 是否包含置信度信息

# Phase 6: 多媒体内容分类与Web界面配置
content_classification:
  # 支持的内容类型定义
  content_types:
    lecture:      # 🎓 学术讲座
      icon: "🎓"
      display_name: "Academic Lecture"
      subcategories:  # 课程子分类
        - "PHYS101"
        - "CS101"
        - "Seminar"
      recommendations:
        english:
          - "whisper-base-mlx"
          - "whisper-small-mlx"  # 英文快速模型
        multilingual:
          - "whisper-large-v3-mlx"         # 多语言高精度

    meeting:      # 🏢 会议录音
      icon: "🏢"
      display_name: "Meeting Recording (Limited support, requires ElevenLabs speaker diarization)"
      subcategories:  # 会议子分类
        - "team_meeting"
        - "project_review"
        - "client_call"
        - "standup"
      recommendations:
        english:
          - "whisper-base-mlx"                     # MLX英文处理
        multilingual:
          - "whisper-large-v3-mlx"                 # MLX多语言处理

# 系统配置
system:
  debug: false  # 调试模式开关

logging:
  level: "INFO"  # 日志级别: DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "./data/logs/app.log"
  console: true  # 是否在控制台输出日志

# Phase 4: 网络集成配置
network:
  tailscale:
    auth_key: "${TAILSCALE_AUTH_KEY}"  # 从环境变量读取
    machine_name: "project-bach"  # 机器名称
    network_name: "project-bach-network"  # 网络名称
    auto_connect: true  # 自动连接
    timeout: 30  # 连接超时时间（秒）

  file_transfer:
    remote_base_path: "/Users/remote/project_bach/watch_folder"  # 远程监控文件夹路径
    local_base_path: "./watch_folder"  # 本地监控文件夹路径
    chunk_size: 8192  # 文件传输块大小（字节）
    timeout: 60  # 传输超时时间（秒）
    retry_attempts: 3  # 重试次数
    verify_integrity: true  # 是否验证文件完整性
    max_file_size: 104857600  # 最大文件大小限制（100MB）

  security:
    allowed_networks: ["100.64.0.0/10"]  # Tailscale CGNAT范围
    blocked_ips: []  # 阻止的IP地址列表
    require_encryption: true  # 是否要求加密连接
    max_connection_attempts: 3  # 最大连接尝试次数
    connection_timeout: 10  # 连接超时时间（秒）
    max_connections_per_minute: 60  # 每分钟最大连接数
    connection_window_seconds: 60  # 连接频率统计窗口（秒）

  monitoring:
    check_interval: 30  # 网络状态检查间隔（秒）
    timeout: 5  # ping超时时间（秒）
    max_retries: 3  # 最大重试次数
    target_hosts: []  # 监控目标主机列表，启动时自动发现Tailscale节点
    alert_on_disconnect: true  # 连接断开时是否告警

  # 安全文件服务器配置
  secure_file_server:
    enabled: true  # 是否启用安全文件服务器
    host: "0.0.0.0"  # 监听地址，0.0.0.0表示所有接口
    port: 8080  # 服务端口
    allowed_dirs:  # 只允许访问这些目录
      - "./watch_folder"
      - "./output"
    auth_token: "${SECURE_FILE_SERVER_TOKEN}"  # 从环境变量读取
    enable_upload: true  # 是否允许文件上传
    enable_download: true  # 是否允许文件下载

# Phase 5: GitHub Pages 自动发布配置
github:
  # GitHub仓库信息
  username: "${GITHUB_USERNAME}"  # 你的GitHub用户名（从环境变量读取）
  repo_name: "Project_Bach"  # 仓库名
  pages_branch: "gh-pages"  # GitHub Pages部署分支

  # API访问配置 (用于查询仓库状态等)
  token: "${GITHUB_TOKEN}"  # GitHub Personal Access Token (从环境变量读取)

  # Git配置 (使用SSH认证，无需token)
  remote_url: "git@github.com:${GITHUB_USERNAME}/Project_Bach.git"  # SSH远程地址

  # Git用户配置 (如果系统没有全局配置时使用的默认值)
  default_user_name: "Project Bach Bot"  # 默认用户名
  default_user_email: "bot@project-bach.com"  # 默认邮箱

  # 网站配置
  website:
    title: "Project Bach"
    description: "基于 MLX Whisper + OpenRouter + spaCy 的智能音频处理与内容生成系统"
    theme: "dark"  # 默认主题: light, dark, auto

  # 部署设置
  publishing:
    auto_deploy: true  # 是否自动部署到GitHub Pages
    include_source: false  # 网站分支是否包含源代码 (推荐: false)
    clean_deploy: true  # 每次部署前清理网站分支 (推荐: true)
    max_files_per_deploy: 50  # 每次部署最多包含的音频结果文件数

  # 内容过滤
  content_filter:
    exclude_patterns:  # 不发布包含这些模式的文件
      - "*private*"
      - "*confidential*"
      - "*test*"
    min_content_length: 100  # 最小内容长度 (字符)
    anonymize_names: true  # 是否在发布前进行人名匿名化

# 模板配置
templates:
  base_dir: "./templates"  # 模板文件目录

  # 页面模板
  homepage: "index.html.j2"  # 主页模板
  content: "content.html.j2"  # 内容页面模板
  error: "error.html.j2"  # 错误页面模板

  # 样式配置
  css:
    primary_color: "#0066cc"  # 主色调
    dark_primary_color: "#4fc3f7"  # 深色模式主色调
    font_family: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif"

  # 功能开关
  features:
    theme_toggle: true  # 主题切换按钮
    search: false  # 搜索功能 (未来功能)
    rss_feed: false  # RSS订阅 (未来功能)
    comments: false  # 评论系统 (未来功能)
  # 分类算法配置
  classification:
    confidence_threshold: 0.5        # 分类置信度阈值
    max_content_length: 5000         # 内容分析最大长度
    enable_auto_tagging: true        # 启用自动标签提取
    default_category: "lecture"      # 默认分类
    enable_manual_override: true     # 允许手动覆盖分类

    # 权重配置 (优先级: URL > 文件名 > 内容)
    scoring_weights:
      url_match: 0.6      # URL模式匹配权重
      filename_match: 0.3 # 文件名模式匹配权重
      content_match: 0.1  # 内容分析权重

    # 标签提取配置
    tag_extraction:
      max_tags: 10                    # 最大标签数量
      min_tag_length: 2               # 最小标签长度
      exclude_common_words: true      # 排除常见词汇
      include_technical_terms: true   # 包含技术术语

  # 内容过滤配置
  content_filter:
    exclude_patterns:     # 排除模式
      - "advertisement"
      - "sponsored"
      - "ad-block"
      - "promotion"
      - "广告"
      - "推广"
    include_patterns:     # 包含模式 (优先级高于排除)
      - "technology"
      - "research"
      - "education"
      - "tutorial"
      - "技术"
      - "研究"
      - "教育"
      - "教程"
    min_quality_score: 0.5  # 最小质量分数

  # 模型推荐策略已移至各content_type下的model_recommendations配置

# Phase 6: Web前端配置
web_frontend:
  # Flask应用配置
  app:
    host: "0.0.0.0"              # 监听地址 (Tailscale网络内)
    port: 8080                   # 服务端口
    debug: false                 # 调试模式
    secret_key_env: "FLASK_SECRET_KEY"  # 从环境变量读取密钥

  # 文件上传配置
  upload:
    max_file_size: 104857600     # 100MB
    allowed_extensions: [".mp3", ".wav", ".m4a", ".mp4", ".flac", ".aac", ".ogg"]
    upload_folder: "./uploads"   # 上传目录，也是文件监控目录
    temp_folder: "./temp"
    auto_cleanup: true           # 自动清理临时文件
    cleanup_interval: 3600       # 清理间隔(秒)
    # 文件组织配置
    organize_by_category: true   # 启用按分类组织文件
    create_subcategory_folders: true  # 为subcategory创建子文件夹

  # 安全配置
  security:
    tailscale_only: true         # 仅允许Tailscale网络访问
    rate_limit_per_minute: 60    # 每分钟请求限制
    rate_limit_per_hour: 1000    # 每小时请求限制
    enable_csrf: true            # 启用CSRF保护
    session_timeout: 3600        # 会话超时(秒)

  # UI配置
  ui:
    theme: "dark"                # 默认主题
    language: "zh-CN"            # 默认语言
    show_progress: true          # 显示处理进度
    auto_refresh_interval: 5     # 状态自动刷新间隔(秒)
    max_concurrent_uploads: 3    # 最大并发上传数

# YouTube处理器配置
youtube:
  # yt-dlp配置
  downloader:
    max_duration: 7200           # 最大时长(秒) 2小时
    min_duration: 60             # 最小时长(秒) 1分钟
    preferred_quality: "best[height<=720]"  # 首选质量
    extract_audio_only: true     # 仅提取音频
    output_format: "mp3"         # 输出格式
    output_dir: "./temp/youtube" # 输出目录
    timeout: 600                 # 下载超时(秒)

  # 内容验证
  validation:
    check_availability: true     # 检查视频可用性
    validate_duration: true      # 验证时长
    skip_private: true           # 跳过私有视频
    skip_age_restricted: false   # 跳过年龄限制视频

  # 元数据提取
  metadata:
    extract_thumbnail: true      # 提取缩略图
    extract_description: true    # 提取描述
    extract_tags: true           # 提取标签
    # 字幕语言优先级设置
    preferred_subtitle_languages: ["zh-CN", "zh", "en"]  # 优先检测的字幕语言
    subtitle_fallback_to_transcription: true             # 无字幕时回退到音频转录
    quick_metadata_timeout: 8                            # 快速元数据获取超时(秒)
    extract_comments: false      # 提取评论(耗时)

# RSS处理器配置
rss:
  # 订阅管理
  subscriptions:
    max_subscriptions: 50        # 最大订阅数
    default_refresh_interval: 3600  # 默认刷新间隔(秒)
    auto_refresh: true           # 自动刷新
    storage_file: "./data/rss_subscriptions.json"  # 订阅存储文件

  # 内容处理
  processing:
    max_articles_per_feed: 20    # 每个feed最大文章数
    content_length_min: 500      # 最小内容长度
    content_length_max: 50000    # 最大内容长度
    enable_summarization: true   # 启用AI摘要
    preserve_html: false         # 保留HTML格式

  # 过滤配置
  filtering:
    exclude_duplicates: true     # 排除重复文章
    exclude_old_articles: true   # 排除旧文章
    max_age_days: 30            # 最大文章年龄(天)
    spam_detection: true         # 垃圾检测

  # 网络配置
  network:
    timeout: 30                  # 请求超时(秒)
    max_retries: 3              # 最大重试次数
    user_agent: "Project Bach RSS Reader 1.0"